### EJEMPLOS DE PETICIONES API REST - RESERVAS
### Puedes usar estos ejemplos con curl, Postman o cualquier cliente HTTP

### Variables
@baseUrl = http://localhost:8060
@apiPath = /api/v1/reserva

###############################################
### 1. GET - Obtener todas las reservas
GET {{baseUrl}}{{apiPath}}
Content-Type: application/json

###############################################
### 2. GET - Obtener reserva por ID
GET {{baseUrl}}{{apiPath}}/1
Content-Type: application/json

###############################################
### 3. POST - Crear nueva reserva
POST {{baseUrl}}{{apiPath}}
Content-Type: application/json

{
  "horaInicio": "10:00:00",
  "horaTermino": "12:00:00",
  "fechaReserva": "2025-10-30",
  "valorReserva": 25000,
  "usuarioId": 1,
  "recursoId": 1
}

###############################################
### 4. PUT - Actualizar reserva completa
PUT {{baseUrl}}{{apiPath}}/1
Content-Type: application/json

{
  "horaInicio": "11:00:00",
  "horaTermino": "13:00:00",
  "estado": true,
  "fechaReserva": "2025-10-30",
  "valorReserva": 30000,
  "usuarioId": 1,
  "recursoId": 2
}

###############################################
### 5. PUT - Actualizar solo el estado
PUT {{baseUrl}}{{apiPath}}/1
Content-Type: application/json

{
  "estado": false
}

###############################################
### 6. DELETE - Eliminar reserva
DELETE {{baseUrl}}{{apiPath}}/1
Content-Type: application/json

###############################################
### 7. GET - Buscar reservas por usuario
GET {{baseUrl}}{{apiPath}}/usuario/1
Content-Type: application/json

###############################################
### 8. GET - Buscar reservas por recurso
GET {{baseUrl}}{{apiPath}}/recurso/1
Content-Type: application/json

###############################################
### 9. GET - Buscar reservas activas
GET {{baseUrl}}{{apiPath}}/estado/true
Content-Type: application/json

###############################################
### 10. GET - Buscar reservas inactivas
GET {{baseUrl}}{{apiPath}}/estado/false
Content-Type: application/json

###############################################
### 11. GET - Buscar reservas por fecha
GET {{baseUrl}}{{apiPath}}/fecha/2025-10-30
Content-Type: application/json

###############################################
### EJEMPLOS CON CURL
###############################################

# 1. Obtener todas las reservas
curl -X GET http://localhost:8060/api/v1/reserva

# 2. Obtener reserva por ID
curl -X GET http://localhost:8060/api/v1/reserva/1

# 3. Crear nueva reserva
curl -X POST http://localhost:8060/api/v1/reserva \
  -H "Content-Type: application/json" \
  -d '{
    "horaInicio": "10:00:00",
    "horaTermino": "12:00:00",
    "fechaReserva": "2025-10-30",
    "valorReserva": 25000,
    "usuarioId": 1,
    "recursoId": 1
  }'

# 4. Actualizar reserva
curl -X PUT http://localhost:8060/api/v1/reserva/1 \
  -H "Content-Type: application/json" \
  -d '{
    "estado": false
  }'

# 5. Eliminar reserva
curl -X DELETE http://localhost:8060/api/v1/reserva/1

# 6. Buscar por usuario
curl -X GET http://localhost:8060/api/v1/reserva/usuario/1

# 7. Buscar por recurso
curl -X GET http://localhost:8060/api/v1/reserva/recurso/1

# 8. Buscar por estado
curl -X GET http://localhost:8060/api/v1/reserva/estado/true

# 9. Buscar por fecha
curl -X GET http://localhost:8060/api/v1/reserva/fecha/2025-10-30

###############################################
### RESPUESTAS ESPERADAS
###############################################

# Respuesta exitosa (GET/POST/PUT):
# Status: 200 OK / 201 CREATED
{
  "id": 1,
  "horaInicio": "10:00:00",
  "horaTermino": "12:00:00",
  "estado": true,
  "fechaReserva": "2025-10-30",
  "valorReserva": 25000,
  "usuarioId": 1,
  "usuarioNombre": "Juan Pérez",
  "recursoId": 1,
  "recursoNombre": "Sala de Reuniones A"
}

# Respuesta eliminación exitosa:
# Status: 204 NO CONTENT
# (Sin cuerpo de respuesta)

# Respuesta error - no encontrado:
# Status: 404 NOT FOUND

# Respuesta error - datos inválidos:
# Status: 400 BAD REQUEST

